# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# [TEMPLATE] Package Unity library and samples for release.

parameters:
- name: buildAgent
  type: string
  default: ''
- name: npmPackageVersion
  type: string
  default: ''

jobs:

# Package library
- job: unity_library
  displayName: "Publish"
  timeoutInMinutes: 60
  pool:
    name: ${{parameters.buildAgent}}
  variables:
  - group: MixedReality-WebRTC-ArtifactConfig
  steps:
  - checkout: self

  # Update packages.json with the package version
  - task: PowerShell@2
    displayName: 'Set package version (library)'
    inputs:
      targetType: 'filePath'
      filePath: '$(Build.SourcesDirectory)/tools/ci/computeNpmPackageVersion.ps1'
      arguments: '-PackageJsonFile "libs/unity/library/package.json" -PackageVersion "${{parameters.npmPackageVersion}}"'
    timeoutInMinutes: 5
  - task: PowerShell@2
    displayName: 'Set package version (samples)'
    inputs:
      targetType: 'filePath'
      filePath: '$(Build.SourcesDirectory)/tools/ci/computeNpmPackageVersion.ps1'
      arguments: '-PackageJsonFile "libs/unity/samples/package.json" -PackageVersion "${{parameters.npmPackageVersion}}"'
    timeoutInMinutes: 5

  # Download mrwebrtc.dll
  - task: DownloadPipelineArtifact@2
    displayName: 'Download mrwebrtc library (Win32-x86-Release)'
    inputs:
      source: 'current'
      artifact: 'mrwebrtc_Win32-x86-Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'libs/unity/library/Runtime/Plugins/Win32/x86'
  - task: DownloadPipelineArtifact@2
    displayName: 'Download mrwebrtc library (Win32-x64-Release)'
    inputs:
      source: 'current'
      artifact: 'mrwebrtc_Win32-x64-Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'libs/unity/library/Runtime/Plugins/Win32/x86_64'
  - task: DownloadPipelineArtifact@2
    displayName: 'Download mrwebrtc library (UWP-x86-Release)'
    inputs:
      source: 'current'
      artifact: 'mrwebrtc_UWP-x86-Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'libs/unity/library/Runtime/Plugins/WSA/x86'
  - task: DownloadPipelineArtifact@2
    displayName: 'Download mrwebrtc library (UWP-x64-Release)'
    inputs:
      source: 'current'
      artifact: 'mrwebrtc_UWP-x64-Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'libs/unity/library/Runtime/Plugins/WSA/x86_64'
  - task: DownloadPipelineArtifact@2
    displayName: 'Download mrwebrtc library (UWP-ARM-Release)'
    inputs:
      source: 'current'
      artifact: 'mrwebrtc_UWP-ARM-Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'libs/unity/library/Runtime/Plugins/WSA/ARM'

  # Download Microsoft.MixedReality.WebRTC.dll
  - task: DownloadPipelineArtifact@2
    displayName: 'Download C# library'
    inputs:
      source: 'current'
      artifact: 'cslib_Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'libs/unity/library/Runtime/Plugins/Win32/x86_64'

  # Write .npmrc
  - task: PowerShell@2
    displayName: 'Write .npmrc (library)'
    inputs:
      targetType: 'filePath'
      filePath: '$(Build.SourcesDirectory)/tools/ci/writeNpmrc.ps1'
      arguments: '-Target "libs/unity/library/.npmrc"'
    env:
      NPM_PUBLISH_REGISTER: $(NPM_PUBLISH_REGISTER)
      NPM_PUBLISH_AUTH: $(NPM_PUBLISH_AUTH)
      NPM_PUBLISH_EMAIL: $(NPM_PUBLISH_EMAIL)
    timeoutInMinutes: 5

  # Publish library
  - script: |
      cd libs/unity/library
      npm publish --registry $(NPM_PUBLISH_REGISTER)
    displayName: 'Publish NPM (library)'

  # Delete .npmrc
  - pwsh: |
      Remove-Item -Path '$(Build.SourcesDirectory)/libs/unity/library/.npmrc' -Force -ErrorAction Ignore
    displayName: 'Delete .npmrc (library)'
    condition: always()

  # Write .npmrc
  - task: PowerShell@2
    displayName: 'Write .npmrc (samples)'
    inputs:
      targetType: 'filePath'
      filePath: '$(Build.SourcesDirectory)/tools/ci/writeNpmrc.ps1'
      arguments: '-Target "libs/unity/samples/.npmrc"'
    env:
      NPM_PUBLISH_REGISTER: $(NPM_PUBLISH_REGISTER)
      NPM_PUBLISH_AUTH: $(NPM_PUBLISH_AUTH)
      NPM_PUBLISH_EMAIL: $(NPM_PUBLISH_EMAIL)
    timeoutInMinutes: 5

  # Publish samples
  - script: |
      cd libs/unity/samples
      npm publish --registry $(NPM_PUBLISH_REGISTER)
    displayName: 'Publish NPM (samples)'

  # Delete .npmrc
  - pwsh: |
      Remove-Item -Path '$(Build.SourcesDirectory)/libs/unity/samples/.npmrc' -Force -ErrorAction Ignore
    displayName: 'Delete .npmrc (samples)'
    condition: always()
